"use strict";var precacheConfig=[["/maxproche/index.html","62f015c2202abb4c38b9fe047f804c51"],["/maxproche/static/css/main.cd6a4e73.css","7aefb4289cf673f47cba91fd7dfea127"],["/maxproche/static/js/main.ac6ee98d.js","8f7be562ce6fabf06722ed5e6b9790e1"],["/maxproche/static/media/AMH-Logo.9a5e05ab.png","9a5e05ab1885d9c6d73d279ca9351d61"],["/maxproche/static/media/Background.4a2c11c8.jpeg","4a2c11c860346549f4936dd55453eefb"],["/maxproche/static/media/Blue-Chicago-Background.7f7dad3a.jpg","7f7dad3a4c95d522c3ddefb838af47c7"],["/maxproche/static/media/Coding-Logo.5099d5b0.jpg","5099d5b03527efc713dff915344f3014"],["/maxproche/static/media/DH-Logo.35afb680.jpg","35afb6806fb0e45bafc3f5df81805864"],["/maxproche/static/media/Dark-Chicago-Background.e3bea97c.jpg","e3bea97cda0ca2d9fb2cc7daa78f530f"],["/maxproche/static/media/HRD-Logo.6addeeaf.png","6addeeaff051e804ab4b0dc8ff48d866"],["/maxproche/static/media/Meetum-Logo.66621a6c.png","66621a6c0f4418ecf4915e7585048adb"],["/maxproche/static/media/PEA-Logo.8d5ff0f5.png","8d5ff0f58de422fa0bf8da110ba073fd"],["/maxproche/static/media/Pacman-Logo.db9e02ac.ico","db9e02ac365b003eee10ba9745734d4f"],["/maxproche/static/media/Quasar-Logo.d4d67a97.png","d4d67a97380ffcb08ecab1057c0c19d2"],["/maxproche/static/media/Resume.0e3ccb43.pdf","0e3ccb43094d02ff7c36e9839d546af3"],["/maxproche/static/media/SC-Logo.22ff2ce4.png","22ff2ce488925f3b4ff5a94ced67d617"],["/maxproche/static/media/TA-Logo.9b5e9c8f.png","9b5e9c8fd35a1cc426880a548237fb55"],["/maxproche/static/media/ThinkBio-Logo.13ecf7de.jpg","13ecf7de3bb9598cfae1da19950d5722"],["/maxproche/static/media/WY-Logo.645f1e25.jpg","645f1e256fa80d689abb3fb4ae3f05f9"]],cacheName="sw-precache-v3-sw-precache-webpack-plugin-"+(self.registration?self.registration.scope:""),ignoreUrlParametersMatching=[/^utm_/],addDirectoryIndex=function(e,a){var t=new URL(e);return"/"===t.pathname.slice(-1)&&(t.pathname+=a),t.toString()},cleanResponse=function(a){return a.redirected?("body"in a?Promise.resolve(a.body):a.blob()).then(function(e){return new Response(e,{headers:a.headers,status:a.status,statusText:a.statusText})}):Promise.resolve(a)},createCacheKey=function(e,a,t,c){var n=new URL(e);return c&&n.pathname.match(c)||(n.search+=(n.search?"&":"")+encodeURIComponent(a)+"="+encodeURIComponent(t)),n.toString()},isPathWhitelisted=function(e,a){if(0===e.length)return!0;var t=new URL(a).pathname;return e.some(function(e){return t.match(e)})},stripIgnoredUrlParameters=function(e,t){var a=new URL(e);return a.hash="",a.search=a.search.slice(1).split("&").map(function(e){return e.split("=")}).filter(function(a){return t.every(function(e){return!e.test(a[0])})}).map(function(e){return e.join("=")}).join("&"),a.toString()},hashParamName="_sw-precache",urlsToCacheKeys=new Map(precacheConfig.map(function(e){var a=e[0],t=e[1],c=new URL(a,self.location),n=createCacheKey(c,hashParamName,t,/\.\w{8}\./);return[c.toString(),n]}));function setOfCachedUrls(e){return e.keys().then(function(e){return e.map(function(e){return e.url})}).then(function(e){return new Set(e)})}self.addEventListener("install",function(e){e.waitUntil(caches.open(cacheName).then(function(c){return setOfCachedUrls(c).then(function(t){return Promise.all(Array.from(urlsToCacheKeys.values()).map(function(a){if(!t.has(a)){var e=new Request(a,{credentials:"same-origin"});return fetch(e).then(function(e){if(!e.ok)throw new Error("Request for "+a+" returned a response with status "+e.status);return cleanResponse(e).then(function(e){return c.put(a,e)})})}}))})}).then(function(){return self.skipWaiting()}))}),self.addEventListener("activate",function(e){var t=new Set(urlsToCacheKeys.values());e.waitUntil(caches.open(cacheName).then(function(a){return a.keys().then(function(e){return Promise.all(e.map(function(e){if(!t.has(e.url))return a.delete(e)}))})}).then(function(){return self.clients.claim()}))}),self.addEventListener("fetch",function(a){if("GET"===a.request.method){var e,t=stripIgnoredUrlParameters(a.request.url,ignoreUrlParametersMatching),c="index.html";(e=urlsToCacheKeys.has(t))||(t=addDirectoryIndex(t,c),e=urlsToCacheKeys.has(t));var n="/maxproche/index.html";!e&&"navigate"===a.request.mode&&isPathWhitelisted(["^(?!\\/__).*"],a.request.url)&&(t=new URL(n,self.location).toString(),e=urlsToCacheKeys.has(t)),e&&a.respondWith(caches.open(cacheName).then(function(e){return e.match(urlsToCacheKeys.get(t)).then(function(e){if(e)return e;throw Error("The cached response that was expected is missing.")})}).catch(function(e){return console.warn('Couldn\'t serve response for "%s" from cache: %O',a.request.url,e),fetch(a.request)}))}});